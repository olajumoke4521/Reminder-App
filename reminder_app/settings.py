"""
Django settings for reminder_app project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

try:
    from dotenv import load_dotenv
    env_file = os.path.join(BASE_DIR, '.env')
    if os.path.exists(env_file):
        load_dotenv(env_file)
        print("Loaded environment variables from .env file")
except ImportError:
    pass  # python-dotenv not installed, might be in production with real env vars

# Environment variable helper function
def env(var_name, default=None):
    """Get environment variable with a default value"""
    return os.environ.get(var_name, default)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2opg&^1*erj^2g!j7doxpw+e7vz=vz06st=f@f+5a%tj(^+@)('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'reminders',
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

ROOT_URLCONF = 'reminder_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reminder_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME', 'reminder_db'),
        'USER': env('DB_USER', 'postgres'),
        'PASSWORD': env('DB_PASSWORD', ''),
        'HOST': env('DB_HOST', 'localhost'),
        'PORT': env('DB_PORT', '5432'),
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(env('EMAIL_PORT', '587'))
EMAIL_USE_TLS = env('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = env('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD', '')

# Celery settings
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Europe/Istanbul'

# Celery Beat schedule settings
CELERY_BEAT_SCHEDULE = {
    'send-due-notifications': {
        'task': 'reminders.tasks.send_due_notifications',
        'schedule': 60.0,  
    },
    'reschedule-recurring-reminders': {
        'task': 'reminders.tasks.reschedule_recurring_reminders',
        'schedule': 3600.0 * 24,  
    },
    'clean-old-notifications': {
        'task': 'reminders.tasks.clean_old_notifications',
        'schedule': 3600.0 * 24 * 7,  
    },
    'check-overdue-items': {
        'task': 'reminders.tasks.check_overdue_items',
        'schedule': 3600.0 * 24,  
    },
}

# Firebase Configuration
FIREBASE_SETTINGS = {
    'SERVICE_ACCOUNT_KEY_PATH': env(
        'FIREBASE_SERVICE_ACCOUNT_PATH', 
        os.path.join(BASE_DIR, 'firebase-service-account.json')
    ),
    
    'WEB_APP_CONFIG': {
        'apiKey': env('FIREBASE_API_KEY', ''),
        'authDomain': env('FIREBASE_AUTH_DOMAIN', ''),
        'projectId': env('FIREBASE_PROJECT_ID', ''),
        'storageBucket': env('FIREBASE_STORAGE_BUCKET', ''),
        'messagingSenderId': env('FIREBASE_MESSAGING_SENDER_ID', ''),
        'appId': env('FIREBASE_APP_ID', '')
    },
    
    # VAPID Key for web push notifications
    'VAPID_KEY': env('FIREBASE_VAPID_KEY', '')
}
FIREBASE_SETTINGS = {
    'SERVICE_ACCOUNT_KEY_PATH': os.path.join(BASE_DIR, 'firebase-service-account.json'),
    
    'WEB_APP_CONFIG': {
       'apiKey': "AIzaSyC66LNInnetFgWPFJpZRgiY_uBCNfE5QLU",
       'authDomain': "reminder-app-7d605.firebaseapp.com",
       'projectId': "reminder-app-7d605",
       'storageBucket': "reminder-app-7d605.firebasestorage.app",
       'messagingSenderId': "228342815984",
       'appId': "1:228342815984:web:d1483ccf6a5a952fe93635"
    },

    'VAPID_KEY': "BJswoykis1_vDjqIVOhVBlVESjinotWVnPXl25Gf9srIoT4zobN9BFeRy1thLfYhu-viQeRkGBOKDt6pqXmxJaM",  
}                                                                    